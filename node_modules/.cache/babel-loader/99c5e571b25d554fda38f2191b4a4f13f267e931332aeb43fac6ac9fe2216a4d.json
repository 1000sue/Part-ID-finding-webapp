{"ast":null,"code":"var _jsxFileName = \"/Users/cheonsu/desoutter/product ID finding app/src/components/TextAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextAnalyzer() {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const analyzeText = async () => {\n    if (!input.trim()) return;\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/analyze', {\n        text: input\n      });\n      setResult(response.data.result);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '40px auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      onChange: e => setInput(e.target.value),\n      placeholder: \"Enter your text here...\",\n      style: {\n        width: '100%',\n        height: '200px',\n        marginBottom: '20px',\n        padding: '10px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyzeText,\n      disabled: isLoading,\n      style: {\n        width: '100%',\n        padding: '10px',\n        backgroundColor: '#0066cc',\n        color: 'white',\n        border: 'none'\n      },\n      children: isLoading ? 'Analyzing...' : 'Analyze Text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px',\n        padding: '20px',\n        border: '1px solid #ccc'\n      },\n      children: result\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(TextAnalyzer, \"1sQhdgkkR+zP79YKa7iZjP9ZXFE=\");\n_c = TextAnalyzer;\nexport default TextAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"TextAnalyzer\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","TextAnalyzer","_s","input","setInput","result","setResult","isLoading","setIsLoading","analyzeText","trim","response","post","text","data","error","console","style","maxWidth","margin","padding","children","value","onChange","e","target","placeholder","width","height","marginBottom","fileName","_jsxFileName","lineNumber","columnNumber","onClick","disabled","backgroundColor","color","border","marginTop","_c","$RefreshReg$"],"sources":["/Users/cheonsu/desoutter/product ID finding app/src/components/TextAnalyzer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nfunction TextAnalyzer() {\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n\n  const analyzeText = async () => {\n    if (!input.trim()) return;\n    \n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/analyze', { text: input });\n      setResult(response.data.result);\n    } catch (error) {\n      console.error('Error:', error);\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <div style={{ maxWidth: '800px', margin: '40px auto', padding: '20px' }}>\n      <textarea\n        value={input}\n        onChange={(e) => setInput(e.target.value)}\n        placeholder=\"Enter your text here...\"\n        style={{ width: '100%', height: '200px', marginBottom: '20px', padding: '10px' }}\n      />\n      <button \n        onClick={analyzeText}\n        disabled={isLoading}\n        style={{ width: '100%', padding: '10px', backgroundColor: '#0066cc', color: 'white', border: 'none' }}\n      >\n        {isLoading ? 'Analyzing...' : 'Analyze Text'}\n      </button>\n      {result && (\n        <div style={{ marginTop: '20px', padding: '20px', border: '1px solid #ccc' }}>\n          {result}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default TextAnalyzer;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,YAAYA,CAAA,EAAG;EAAAC,EAAA;EACtB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EACxC,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,KAAK,CAAC;EAEjD,MAAMY,WAAW,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI,CAACN,KAAK,CAACO,IAAI,CAAC,CAAC,EAAE;IAEnBF,YAAY,CAAC,IAAI,CAAC;IAClB,IAAI;MACF,MAAMG,QAAQ,GAAG,MAAMb,KAAK,CAACc,IAAI,CAAC,cAAc,EAAE;QAAEC,IAAI,EAAEV;MAAM,CAAC,CAAC;MAClEG,SAAS,CAACK,QAAQ,CAACG,IAAI,CAACT,MAAM,CAAC;IACjC,CAAC,CAAC,OAAOU,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;IACAP,YAAY,CAAC,KAAK,CAAC;EACrB,CAAC;EAED,oBACER,OAAA;IAAKiB,KAAK,EAAE;MAAEC,QAAQ,EAAE,OAAO;MAAEC,MAAM,EAAE,WAAW;MAAEC,OAAO,EAAE;IAAO,CAAE;IAAAC,QAAA,gBACtErB,OAAA;MACEsB,KAAK,EAAEnB,KAAM;MACboB,QAAQ,EAAGC,CAAC,IAAKpB,QAAQ,CAACoB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC1CI,WAAW,EAAC,yBAAyB;MACrCT,KAAK,EAAE;QAAEU,KAAK,EAAE,MAAM;QAAEC,MAAM,EAAE,OAAO;QAAEC,YAAY,EAAE,MAAM;QAAET,OAAO,EAAE;MAAO;IAAE;MAAAU,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClF,CAAC,eACFjC,OAAA;MACEkC,OAAO,EAAEzB,WAAY;MACrB0B,QAAQ,EAAE5B,SAAU;MACpBU,KAAK,EAAE;QAAEU,KAAK,EAAE,MAAM;QAAEP,OAAO,EAAE,MAAM;QAAEgB,eAAe,EAAE,SAAS;QAAEC,KAAK,EAAE,OAAO;QAAEC,MAAM,EAAE;MAAO,CAAE;MAAAjB,QAAA,EAErGd,SAAS,GAAG,cAAc,GAAG;IAAc;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,EACR5B,MAAM,iBACLL,OAAA;MAAKiB,KAAK,EAAE;QAAEsB,SAAS,EAAE,MAAM;QAAEnB,OAAO,EAAE,MAAM;QAAEkB,MAAM,EAAE;MAAiB,CAAE;MAAAjB,QAAA,EAC1EhB;IAAM;MAAAyB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAAC/B,EAAA,CAxCQD,YAAY;AAAAuC,EAAA,GAAZvC,YAAY;AA0CrB,eAAeA,YAAY;AAAC,IAAAuC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}