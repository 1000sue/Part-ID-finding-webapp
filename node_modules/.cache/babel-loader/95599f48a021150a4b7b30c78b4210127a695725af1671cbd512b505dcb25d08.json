{"ast":null,"code":"var _jsxFileName = \"/Users/cheonsu/Documents/GitHub/product-ID-finding-app/src/components/TextAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextAnalyzer() {\n  _s();\n  // Add PIM data state\n  const [pimData, setPimData] = useState([]);\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [tableResult, setTableResult] = useState(''); // Add this line\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Constants for Azure OpenAI\n  const AZURE_ENDPOINT = \"https://thread-knowledge.openai.azure.com\";\n  const DEPLOYMENT_NAME = \"gpt-4o-mini-s\";\n  const API_VERSION = \"2024-02-01\";\n  const API_KEY = \"ded9fbd4adb645d7a2fadf016761922f\";\n\n  // Move useEffect to component body level\n  // In the useEffect where CSV is loaded\n  useEffect(() => {\n    const loadPimData = async () => {\n      try {\n        const response = await fetch('/PIM_product_name_id.csv');\n        const text = await response.text();\n        const rows = text.split('\\n').slice(1); // Skip header row\n        const data = rows.map(row => {\n          const [part_name, part_id] = row.split(',');\n          return {\n            part_name: part_name === null || part_name === void 0 ? void 0 : part_name.trim(),\n            part_id: part_id === null || part_id === void 0 ? void 0 : part_id.replace(/[\\r\\n]/g, '').trim()\n          };\n        });\n        setPimData(data);\n      } catch (err) {\n        console.error('Error loading PIM data:', err);\n      }\n    };\n    loadPimData();\n  }, []);\n  const analyzeText = async () => {\n    if (!input.trim()) {\n      setError('Please enter some text to analyze');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      const url = `${AZURE_ENDPOINT}/openai/deployments/${DEPLOYMENT_NAME}/chat/completions?api-version=${API_VERSION}`;\n      const response = await axios({\n        method: 'post',\n        url: url,\n        headers: {\n          'Content-Type': 'application/json',\n          'api-key': API_KEY\n        },\n        data: {\n          messages: [{\n            role: \"system\",\n            content: `Extract the following information from the input text and return it in JSON format:\n              {\n                \"customer_name\": \"\",\n                \"company_name\": \"\",\n                \"company_address\": \"\",\n                \"products\": [\n                  {\n                    \"part_name\": \"\",\n                    \"part_id\": \"\",\n                    \"quantity\": \"\"\n                  }\n                ],\n                \"competitor_name\": \"\",\n                \"discount_mentioned\": false\n              }\n              \n              Guidelines:\n              - Create a new product object in the products array for each product/part mentioned\n              - Fill in all fields that can be found in the text\n              - Leave fields empty (\"\") if information is not present\n              - For quantity, include units if specified\n              - Set discount_mentioned to true if any discount is mentioned in the text\n              - Ensure exact matches for part IDs\n              - Return only the JSON object, no additional text like json`\n          }, {\n            role: \"user\",\n            content: input\n          }],\n          max_tokens: 800,\n          temperature: 0.3,\n          // Lower temperature for more precise extraction\n          frequency_penalty: 0,\n          presence_penalty: 0,\n          top_p: 0.95\n        }\n      });\n      if (response.data && response.data.choices && response.data.choices[0]) {\n        const resultText = response.data.choices[0].message.content;\n        setResult(resultText);\n        try {\n          const parsedData = JSON.parse(resultText);\n          if (parsedData.products && Array.isArray(parsedData.products)) {\n            const tableHeader = 'Match Type    Product Name   Product ID   Quantity\\n----------------------------------------------------------\\n';\n            const tableRows = parsedData.products.map(product => {\n              let matches = [];\n\n              // Try exact ID match first\n              if (product.part_id) {\n                const searchId = String(product.part_id).trim();\n                const exactIdMatch = pimData.find(item => String(item.part_id).trim() === searchId);\n                if (exactIdMatch) {\n                  matches.push({\n                    ...exactIdMatch,\n                    matchType: 'Exact'\n                  });\n                }\n              }\n\n              // Try exact name match\n              if (product.part_name && matches.length === 0) {\n                const searchName = product.part_name.toLowerCase().trim();\n                const exactNameMatch = pimData.find(item => {\n                  var _item$part_name;\n                  return ((_item$part_name = item.part_name) === null || _item$part_name === void 0 ? void 0 : _item$part_name.toLowerCase().trim()) === searchName;\n                });\n                if (exactNameMatch) {\n                  matches.push({\n                    ...exactNameMatch,\n                    matchType: 'Exact'\n                  });\n                }\n              }\n\n              // Try partial matches\n              if (matches.length === 0) {\n                const partialMatches = pimData.filter(item => {\n                  const nameMatch = item.part_name && product.part_name && item.part_name.toLowerCase().includes(product.part_name.toLowerCase());\n                  const idMatch = item.part_id && product.part_id && item.part_id.includes(product.part_id);\n                  return nameMatch || idMatch;\n                });\n                matches.push(...partialMatches.map(match => ({\n                  ...match,\n                  matchType: 'Possible'\n                })));\n              }\n\n              // Generate table rows for all matches\n              if (matches.length === 0) {\n                return `No Match     ${(product.part_name || '-').padEnd(14)} ${(product.part_id || '-').padEnd(12)} ${product.quantity || '-'}`;\n              }\n              return matches.map(match => `${match.matchType.padEnd(12)} ${(match.part_name || '-').padEnd(14)} ${(match.part_id || '-').padEnd(12)} ${product.quantity || '-'}`).join('\\n');\n            }).join('\\n');\n            setTableResult(tableHeader + tableRows);\n          }\n        } catch (parseError) {\n          setTableResult('Error parsing product data');\n          console.error('Parse error:', parseError);\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$er;\n      console.error('API Error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$er = _err$response$data.error) === null || _err$response$data$er === void 0 ? void 0 : _err$response$data$er.message) || err.message || 'Failed to analyze text');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '40px auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: '10px',\n          fontWeight: 'bold'\n        },\n        children: \"Input Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Enter your text here...\",\n        style: {\n          width: '100%',\n          height: '200px',\n          padding: '10px',\n          marginBottom: '10px',\n          borderRadius: '4px',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '20px',\n        padding: '10px',\n        backgroundColor: '#fff3f3',\n        borderRadius: '4px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyzeText,\n      disabled: isLoading,\n      style: {\n        width: '100%',\n        padding: '12px',\n        backgroundColor: isLoading ? '#cccccc' : '#0066cc',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: isLoading ? 'not-allowed' : 'pointer',\n        marginBottom: '20px'\n      },\n      children: isLoading ? 'Analyzing...' : 'Analyze Text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '10px',\n            fontWeight: 'bold'\n          },\n          children: \"Extracted Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: result,\n          readOnly: true,\n          placeholder: \"Extracted information will appear here...\",\n          style: {\n            width: '100%',\n            height: '200px',\n            padding: '10px',\n            backgroundColor: '#f5f5f5',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 232,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '10px',\n            fontWeight: 'bold'\n          },\n          children: \"Product Table:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: tableResult,\n          readOnly: true,\n          placeholder: \"Product table will appear here...\",\n          style: {\n            width: '100%',\n            height: '200px',\n            padding: '10px',\n            backgroundColor: '#f5f5f5',\n            borderRadius: '4px',\n            border: '1px solid #ccc',\n            fontFamily: 'monospace'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 251,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 247,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 178,\n    columnNumber: 5\n  }, this);\n}\n_s(TextAnalyzer, \"2kourmUoH1ra6hzLgTsjsuECrns=\");\n_c = TextAnalyzer;\nexport default TextAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"TextAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","TextAnalyzer","_s","pimData","setPimData","input","setInput","result","setResult","tableResult","setTableResult","isLoading","setIsLoading","error","setError","AZURE_ENDPOINT","DEPLOYMENT_NAME","API_VERSION","API_KEY","loadPimData","response","fetch","text","rows","split","slice","data","map","row","part_name","part_id","trim","replace","err","console","analyzeText","url","method","headers","messages","role","content","max_tokens","temperature","frequency_penalty","presence_penalty","top_p","choices","resultText","message","parsedData","JSON","parse","products","Array","isArray","tableHeader","tableRows","product","matches","searchId","String","exactIdMatch","find","item","push","matchType","length","searchName","toLowerCase","exactNameMatch","_item$part_name","partialMatches","filter","nameMatch","includes","idMatch","match","padEnd","quantity","join","parseError","_err$response","_err$response$data","_err$response$data$er","style","maxWidth","margin","padding","children","marginBottom","display","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","width","height","borderRadius","border","color","backgroundColor","onClick","disabled","cursor","gap","flex","readOnly","fontFamily","_c","$RefreshReg$"],"sources":["/Users/cheonsu/Documents/GitHub/product-ID-finding-app/src/components/TextAnalyzer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction TextAnalyzer() {\n  // Add PIM data state\n  const [pimData, setPimData] = useState([]);\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [tableResult, setTableResult] = useState('');  // Add this line\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Constants for Azure OpenAI\n  const AZURE_ENDPOINT = \"https://thread-knowledge.openai.azure.com\";\n  const DEPLOYMENT_NAME = \"gpt-4o-mini-s\";\n  const API_VERSION = \"2024-02-01\";\n  const API_KEY = \"ded9fbd4adb645d7a2fadf016761922f\";\n\n  // Move useEffect to component body level\n  // In the useEffect where CSV is loaded\n  useEffect(() => {\n    const loadPimData = async () => {\n      try {\n        const response = await fetch('/PIM_product_name_id.csv');\n        const text = await response.text();\n        const rows = text.split('\\n').slice(1); // Skip header row\n        const data = rows.map(row => {\n          const [part_name, part_id] = row.split(',');\n          return { \n            part_name: part_name?.trim(), \n            part_id: part_id?.replace(/[\\r\\n]/g, '').trim() \n          };\n        });\n  \n        \n        setPimData(data);\n      } catch (err) {\n        console.error('Error loading PIM data:', err);\n      }\n    };\n    loadPimData();\n  }, []);\n\n  const analyzeText = async () => {\n    if (!input.trim()) {\n      setError('Please enter some text to analyze');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const url = `${AZURE_ENDPOINT}/openai/deployments/${DEPLOYMENT_NAME}/chat/completions?api-version=${API_VERSION}`;\n      \n      const response = await axios({\n        method: 'post',\n        url: url,\n        headers: {\n          'Content-Type': 'application/json',\n          'api-key': API_KEY\n        },\n        data: {\n          messages: [\n            {\n              role: \"system\",\n              content: `Extract the following information from the input text and return it in JSON format:\n              {\n                \"customer_name\": \"\",\n                \"company_name\": \"\",\n                \"company_address\": \"\",\n                \"products\": [\n                  {\n                    \"part_name\": \"\",\n                    \"part_id\": \"\",\n                    \"quantity\": \"\"\n                  }\n                ],\n                \"competitor_name\": \"\",\n                \"discount_mentioned\": false\n              }\n              \n              Guidelines:\n              - Create a new product object in the products array for each product/part mentioned\n              - Fill in all fields that can be found in the text\n              - Leave fields empty (\"\") if information is not present\n              - For quantity, include units if specified\n              - Set discount_mentioned to true if any discount is mentioned in the text\n              - Ensure exact matches for part IDs\n              - Return only the JSON object, no additional text like json`\n            },\n            {\n              role: \"user\",\n              content: input\n            }\n          ],\n          max_tokens: 800,\n          temperature: 0.3, // Lower temperature for more precise extraction\n          frequency_penalty: 0,\n          presence_penalty: 0,\n          top_p: 0.95\n        }\n      });\n\n      if (response.data && response.data.choices && response.data.choices[0]) {\n        const resultText = response.data.choices[0].message.content;\n        setResult(resultText);\n        \n        try {\n          const parsedData = JSON.parse(resultText);\n          if (parsedData.products && Array.isArray(parsedData.products)) {\n            const tableHeader = 'Match Type    Product Name   Product ID   Quantity\\n----------------------------------------------------------\\n';\n            const tableRows = parsedData.products.map(product => {\n              let matches = [];\n              \n              // Try exact ID match first\n              if (product.part_id) {\n                const searchId = String(product.part_id).trim();\n                const exactIdMatch = pimData.find(item => String(item.part_id).trim() === searchId);\n                if (exactIdMatch) {\n                  matches.push({ ...exactIdMatch, matchType: 'Exact' });\n                }\n              }\n              \n              // Try exact name match\n              if (product.part_name && matches.length === 0) {\n                const searchName = product.part_name.toLowerCase().trim();\n                const exactNameMatch = pimData.find(item => \n                  item.part_name?.toLowerCase().trim() === searchName\n                );\n                if (exactNameMatch) {\n                  matches.push({ ...exactNameMatch, matchType: 'Exact' });\n                }\n              }\n              \n              // Try partial matches\n              if (matches.length === 0) {\n                const partialMatches = pimData.filter(item => {\n                  const nameMatch = item.part_name && product.part_name &&\n                    item.part_name.toLowerCase().includes(product.part_name.toLowerCase());\n                  const idMatch = item.part_id && product.part_id &&\n                    item.part_id.includes(product.part_id);\n                  return nameMatch || idMatch;\n                });\n                matches.push(...partialMatches.map(match => ({ ...match, matchType: 'Possible' })));\n              }\n              \n              // Generate table rows for all matches\n              if (matches.length === 0) {\n                return `No Match     ${(product.part_name || '-').padEnd(14)} ${(product.part_id || '-').padEnd(12)} ${product.quantity || '-'}`;\n              }\n              \n              return matches.map(match => \n                `${match.matchType.padEnd(12)} ${(match.part_name || '-').padEnd(14)} ${(match.part_id || '-').padEnd(12)} ${product.quantity || '-'}`\n              ).join('\\n');\n            }).join('\\n');\n            \n            setTableResult(tableHeader + tableRows);\n          }\n        } catch (parseError) {\n          setTableResult('Error parsing product data');\n          console.error('Parse error:', parseError);\n        }\n      }\n    } catch (err) {\n      console.error('API Error:', err);\n      setError(\n        err.response?.data?.error?.message || \n        err.message || \n        'Failed to analyze text'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '800px', margin: '40px auto', padding: '20px' }}>\n      <div style={{ marginBottom: '20px' }}>\n        <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\n          Input Text:\n        </label>\n        <textarea\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter your text here...\"\n          style={{ \n            width: '100%', \n            height: '200px', \n            padding: '10px', \n            marginBottom: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }}\n        />\n      </div>\n\n      {error && (\n        <div style={{ \n          color: 'red', \n          marginBottom: '20px', \n          padding: '10px', \n          backgroundColor: '#fff3f3',\n          borderRadius: '4px'\n        }}>\n          {error}\n        </div>\n      )}\n\n      <button \n        onClick={analyzeText}\n        disabled={isLoading}\n        style={{ \n          width: '100%', \n          padding: '12px', \n          backgroundColor: isLoading ? '#cccccc' : '#0066cc', \n          color: 'white', \n          border: 'none',\n          borderRadius: '4px',\n          cursor: isLoading ? 'not-allowed' : 'pointer',\n          marginBottom: '20px'\n        }}\n      >\n        {isLoading ? 'Analyzing...' : 'Analyze Text'}\n      </button>\n\n      <div style={{ display: 'flex', gap: '20px' }}>\n        <div style={{ flex: 1 }}>\n          <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\n            Extracted Information:\n          </label>\n          <textarea\n            value={result}\n            readOnly\n            placeholder=\"Extracted information will appear here...\"\n            style={{ \n              width: '100%', \n              height: '200px', \n              padding: '10px',\n              backgroundColor: '#f5f5f5',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            }}\n          />\n        </div>\n\n        <div style={{ flex: 1 }}>\n          <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\n            Product Table:\n          </label>\n          <textarea\n            value={tableResult}\n            readOnly\n            placeholder=\"Product table will appear here...\"\n            style={{ \n              width: '100%', \n              height: '200px', \n              padding: '10px',\n              backgroundColor: '#f5f5f5',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              fontFamily: 'monospace'\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TextAnalyzer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}