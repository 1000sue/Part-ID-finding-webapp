{"ast":null,"code":"var _jsxFileName = \"/Users/cheonsu/Documents/GitHub/product-ID-finding-app/src/components/TextAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextAnalyzer() {\n  _s();\n  // Add PIM data state\n  const [pimData, setPimData] = useState([]);\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [tableResult, setTableResult] = useState(''); // Add this line\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Constants for Azure OpenAI\n  const AZURE_ENDPOINT = \"https://thread-knowledge.openai.azure.com\";\n  const DEPLOYMENT_NAME = \"gpt-4o-mini-s\";\n  const API_VERSION = \"2024-02-01\";\n  const API_KEY = \"ded9fbd4adb645d7a2fadf016761922f\";\n\n  // Move useEffect to component body level\n  // In the useEffect where CSV is loaded\n  useEffect(() => {\n    const loadPimData = () => {\n      Papa.parse('/PIM_product_name_id.csv', {\n        download: true,\n        header: true,\n        skipEmptyLines: true,\n        delimiter: ',',\n        complete: function (results) {\n          if (results.errors.length) {\n            console.error('CSV parsing errors:', results.errors);\n            return;\n          }\n          const cleanData = results.data.filter(row => row['Part Name'] && row['Part ID']).map(row => ({\n            'Part Name': row['Part Name'].trim(),\n            'Part ID': row['Part ID'].trim()\n          }));\n          console.log('CSV Loading Success:');\n          console.log('Headers:', Object.keys(results.data[0]));\n          console.log('First row:', cleanData[0]);\n          console.log('Total rows:', cleanData.length);\n          setPimData(cleanData);\n        },\n        error: function (error) {\n          console.error('CSV Loading Error:', error.message);\n        }\n      });\n    };\n    loadPimData();\n  }, []);\n  const analyzeText = async () => {\n    if (!input.trim()) {\n      setError('Please enter some text to analyze');\n      return;\n    }\n    setIsLoading(true);\n    setError(null);\n    try {\n      const url = `${AZURE_ENDPOINT}/openai/deployments/${DEPLOYMENT_NAME}/chat/completions?api-version=${API_VERSION}`;\n      const response = await axios({\n        method: 'post',\n        url: url,\n        headers: {\n          'Content-Type': 'application/json',\n          'api-key': API_KEY\n        },\n        data: {\n          messages: [{\n            role: \"system\",\n            content: `Extract the following information from the input text and return it in JSON format:\n              {\n                \"customer_name\": \"\",\n                \"company_name\": \"\",\n                \"company_address\": \"\",\n                \"products\": [\n                  {\n                    \"part_name\": \"\",\n                    \"part_id\": \"\",\n                    \"quantity\": \"\"\n                  }\n                ],\n                \"competitor_name\": \"\",\n                \"discount_mentioned\": false\n              }\n              \n              Guidelines:\n              - Create a new product object in the products array for each product/part mentioned\n              - Fill in all fields that can be found in the text\n              - Leave fields empty (\"\") if information is not present\n              - For quantity, include units if specified\n              - Set discount_mentioned to true if any discount is mentioned in the text\n              - Ensure exact matches for part IDs\n              - Return only the JSON object, no additional text`\n          }, {\n            role: \"user\",\n            content: input\n          }],\n          max_tokens: 800,\n          temperature: 0.3,\n          // Lower temperature for more precise extraction\n          frequency_penalty: 0,\n          presence_penalty: 0,\n          top_p: 0.95\n        }\n      });\n      if (response.data && response.data.choices && response.data.choices[0]) {\n        const resultText = response.data.choices[0].message.content;\n        setResult(resultText);\n        try {\n          const parsedData = JSON.parse(resultText);\n          if (parsedData.products && Array.isArray(parsedData.products)) {\n            const tableHeader = 'Product Name   Product ID   Quantity\\n----------------------------------------\\n';\n            const tableRows = parsedData.products.map(product => {\n              var _pimMatch, _pimMatch2;\n              let pimMatch = null;\n\n              // Debug log before search\n              console.log('Searching for:', {\n                productId: product.part_id,\n                productName: product.part_name,\n                sampleCSVData: pimData.slice(0, 3)\n              });\n\n              // Try ID match first\n              if (product.part_id) {\n                const searchId = String(product.part_id).trim();\n                pimMatch = pimData.find(item => {\n                  const csvId = String(item['Part ID']).trim();\n                  const isMatch = csvId === searchId;\n                  console.log('ID Comparison:', {\n                    searchId: searchId,\n                    csvId: csvId,\n                    matches: isMatch\n                  });\n                  return isMatch;\n                });\n              }\n\n              // If no ID match, try name match\n              if (!pimMatch && product.part_name) {\n                const searchName = product.part_name.toLowerCase().trim();\n                pimMatch = pimData.find(item => {\n                  var _item$PartName;\n                  const csvName = (_item$PartName = item['Part Name']) === null || _item$PartName === void 0 ? void 0 : _item$PartName.toLowerCase().trim();\n                  return csvName === searchName;\n                });\n              }\n              console.log('Match result:', {\n                input: {\n                  id: product.part_id,\n                  name: product.part_name\n                },\n                found: pimMatch ? `${pimMatch['Part Name']} (${pimMatch['Part ID']})` : 'No match'\n              });\n              const partName = ((_pimMatch = pimMatch) === null || _pimMatch === void 0 ? void 0 : _pimMatch['Part Name']) || product.part_name;\n              const partId = ((_pimMatch2 = pimMatch) === null || _pimMatch2 === void 0 ? void 0 : _pimMatch2['Part ID']) || product.part_id;\n              return `${(partName || '-').padEnd(14)} ${(partId || '-').padEnd(12)} ${product.quantity || '-'}`;\n            }).join('\\n');\n            setTableResult(tableHeader + tableRows);\n          }\n        } catch (parseError) {\n          setTableResult('Error parsing product data');\n          console.error('Parse error:', parseError);\n        }\n      }\n    } catch (err) {\n      var _err$response, _err$response$data, _err$response$data$er;\n      console.error('API Error:', err);\n      setError(((_err$response = err.response) === null || _err$response === void 0 ? void 0 : (_err$response$data = _err$response.data) === null || _err$response$data === void 0 ? void 0 : (_err$response$data$er = _err$response$data.error) === null || _err$response$data$er === void 0 ? void 0 : _err$response$data$er.message) || err.message || 'Failed to analyze text');\n    } finally {\n      setIsLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      maxWidth: '800px',\n      margin: '40px auto',\n      padding: '20px'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        style: {\n          display: 'block',\n          marginBottom: '10px',\n          fontWeight: 'bold'\n        },\n        children: \"Input Text:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n        value: input,\n        onChange: e => setInput(e.target.value),\n        placeholder: \"Enter your text here...\",\n        style: {\n          width: '100%',\n          height: '200px',\n          padding: '10px',\n          marginBottom: '10px',\n          borderRadius: '4px',\n          border: '1px solid #ccc'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 199,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        color: 'red',\n        marginBottom: '20px',\n        padding: '10px',\n        backgroundColor: '#fff3f3',\n        borderRadius: '4px'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: analyzeText,\n      disabled: isLoading,\n      style: {\n        width: '100%',\n        padding: '12px',\n        backgroundColor: isLoading ? '#cccccc' : '#0066cc',\n        color: 'white',\n        border: 'none',\n        borderRadius: '4px',\n        cursor: isLoading ? 'not-allowed' : 'pointer',\n        marginBottom: '20px'\n      },\n      children: isLoading ? 'Analyzing...' : 'Analyze Text'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '10px',\n            fontWeight: 'bold'\n          },\n          children: \"Extracted Information:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: result,\n          readOnly: true,\n          placeholder: \"Extracted information will appear here...\",\n          style: {\n            width: '100%',\n            height: '200px',\n            padding: '10px',\n            backgroundColor: '#f5f5f5',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 244,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          flex: 1\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          style: {\n            display: 'block',\n            marginBottom: '10px',\n            fontWeight: 'bold'\n          },\n          children: \"Product Table:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: tableResult,\n          readOnly: true,\n          placeholder: \"Product table will appear here...\",\n          style: {\n            width: '100%',\n            height: '200px',\n            padding: '10px',\n            backgroundColor: '#f5f5f5',\n            borderRadius: '4px',\n            border: '1px solid #ccc',\n            fontFamily: 'monospace'\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 243,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n_s(TextAnalyzer, \"2kourmUoH1ra6hzLgTsjsuECrns=\");\n_c = TextAnalyzer;\nexport default TextAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"TextAnalyzer\");","map":{"version":3,"names":["React","useState","useEffect","axios","Papa","jsxDEV","_jsxDEV","TextAnalyzer","_s","pimData","setPimData","input","setInput","result","setResult","tableResult","setTableResult","isLoading","setIsLoading","error","setError","AZURE_ENDPOINT","DEPLOYMENT_NAME","API_VERSION","API_KEY","loadPimData","parse","download","header","skipEmptyLines","delimiter","complete","results","errors","length","console","cleanData","data","filter","row","map","trim","log","Object","keys","message","analyzeText","url","response","method","headers","messages","role","content","max_tokens","temperature","frequency_penalty","presence_penalty","top_p","choices","resultText","parsedData","JSON","products","Array","isArray","tableHeader","tableRows","product","_pimMatch","_pimMatch2","pimMatch","productId","part_id","productName","part_name","sampleCSVData","slice","searchId","String","find","item","csvId","isMatch","matches","searchName","toLowerCase","_item$PartName","csvName","id","name","found","partName","partId","padEnd","quantity","join","parseError","err","_err$response","_err$response$data","_err$response$data$er","style","maxWidth","margin","padding","children","marginBottom","display","fontWeight","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","e","target","placeholder","width","height","borderRadius","border","color","backgroundColor","onClick","disabled","cursor","gap","flex","readOnly","fontFamily","_c","$RefreshReg$"],"sources":["/Users/cheonsu/Documents/GitHub/product-ID-finding-app/src/components/TextAnalyzer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Papa from 'papaparse';\n\nfunction TextAnalyzer() {\n  // Add PIM data state\n  const [pimData, setPimData] = useState([]);\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [tableResult, setTableResult] = useState('');  // Add this line\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  // Constants for Azure OpenAI\n  const AZURE_ENDPOINT = \"https://thread-knowledge.openai.azure.com\";\n  const DEPLOYMENT_NAME = \"gpt-4o-mini-s\";\n  const API_VERSION = \"2024-02-01\";\n  const API_KEY = \"ded9fbd4adb645d7a2fadf016761922f\";\n\n  // Move useEffect to component body level\n  // In the useEffect where CSV is loaded\n  useEffect(() => {\n    const loadPimData = () => {\n      Papa.parse('/PIM_product_name_id.csv', {\n        download: true,\n        header: true,\n        skipEmptyLines: true,\n        delimiter: ',',\n        complete: function(results) {\n          if (results.errors.length) {\n            console.error('CSV parsing errors:', results.errors);\n            return;\n          }\n    \n          const cleanData = results.data\n            .filter(row => row['Part Name'] && row['Part ID'])\n            .map(row => ({\n              'Part Name': row['Part Name'].trim(),\n              'Part ID': row['Part ID'].trim()\n            }));\n    \n          console.log('CSV Loading Success:');\n          console.log('Headers:', Object.keys(results.data[0]));\n          console.log('First row:', cleanData[0]);\n          console.log('Total rows:', cleanData.length);\n    \n          setPimData(cleanData);\n        },\n        error: function(error) {\n          console.error('CSV Loading Error:', error.message);\n        }\n      });\n    };\n    \n    loadPimData();\n  }, []);\n\n  const analyzeText = async () => {\n    if (!input.trim()) {\n      setError('Please enter some text to analyze');\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      const url = `${AZURE_ENDPOINT}/openai/deployments/${DEPLOYMENT_NAME}/chat/completions?api-version=${API_VERSION}`;\n      \n      const response = await axios({\n        method: 'post',\n        url: url,\n        headers: {\n          'Content-Type': 'application/json',\n          'api-key': API_KEY\n        },\n        data: {\n          messages: [\n            {\n              role: \"system\",\n              content: `Extract the following information from the input text and return it in JSON format:\n              {\n                \"customer_name\": \"\",\n                \"company_name\": \"\",\n                \"company_address\": \"\",\n                \"products\": [\n                  {\n                    \"part_name\": \"\",\n                    \"part_id\": \"\",\n                    \"quantity\": \"\"\n                  }\n                ],\n                \"competitor_name\": \"\",\n                \"discount_mentioned\": false\n              }\n              \n              Guidelines:\n              - Create a new product object in the products array for each product/part mentioned\n              - Fill in all fields that can be found in the text\n              - Leave fields empty (\"\") if information is not present\n              - For quantity, include units if specified\n              - Set discount_mentioned to true if any discount is mentioned in the text\n              - Ensure exact matches for part IDs\n              - Return only the JSON object, no additional text`\n            },\n            {\n              role: \"user\",\n              content: input\n            }\n          ],\n          max_tokens: 800,\n          temperature: 0.3, // Lower temperature for more precise extraction\n          frequency_penalty: 0,\n          presence_penalty: 0,\n          top_p: 0.95\n        }\n      });\n\n      if (response.data && response.data.choices && response.data.choices[0]) {\n        const resultText = response.data.choices[0].message.content;\n        setResult(resultText);\n        \n        try {\n          const parsedData = JSON.parse(resultText);\n          if (parsedData.products && Array.isArray(parsedData.products)) {\n            const tableHeader = 'Product Name   Product ID   Quantity\\n----------------------------------------\\n';\n            const tableRows = parsedData.products.map(product => {\n              let pimMatch = null;\n              \n              // Debug log before search\n              console.log('Searching for:', {\n                productId: product.part_id,\n                productName: product.part_name,\n                sampleCSVData: pimData.slice(0, 3)\n              });\n  \n              // Try ID match first\n              if (product.part_id) {\n                const searchId = String(product.part_id).trim();\n                pimMatch = pimData.find(item => {\n                  const csvId = String(item['Part ID']).trim();\n                  const isMatch = csvId === searchId;\n                  \n                  console.log('ID Comparison:', {\n                    searchId: searchId,\n                    csvId: csvId,\n                    matches: isMatch\n                  });\n                  \n                  return isMatch;\n                });\n              }\n  \n              // If no ID match, try name match\n              if (!pimMatch && product.part_name) {\n                const searchName = product.part_name.toLowerCase().trim();\n                pimMatch = pimData.find(item => {\n                  const csvName = item['Part Name']?.toLowerCase().trim();\n                  return csvName === searchName;\n                });\n              }\n  \n              console.log('Match result:', {\n                input: { id: product.part_id, name: product.part_name },\n                found: pimMatch ? `${pimMatch['Part Name']} (${pimMatch['Part ID']})` : 'No match'\n              });\n  \n              const partName = pimMatch?.['Part Name'] || product.part_name;\n              const partId = pimMatch?.['Part ID'] || product.part_id;\n              \n              return `${(partName || '-').padEnd(14)} ${(partId || '-').padEnd(12)} ${product.quantity || '-'}`;\n            }).join('\\n');\n            \n            setTableResult(tableHeader + tableRows);\n          }\n        } catch (parseError) {\n          setTableResult('Error parsing product data');\n          console.error('Parse error:', parseError);\n        }\n      }\n    } catch (err) {\n      console.error('API Error:', err);\n      setError(\n        err.response?.data?.error?.message || \n        err.message || \n        'Failed to analyze text'\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <div style={{ maxWidth: '800px', margin: '40px auto', padding: '20px' }}>\n      <div style={{ marginBottom: '20px' }}>\n        <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\n          Input Text:\n        </label>\n        <textarea\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          placeholder=\"Enter your text here...\"\n          style={{ \n            width: '100%', \n            height: '200px', \n            padding: '10px', \n            marginBottom: '10px',\n            borderRadius: '4px',\n            border: '1px solid #ccc'\n          }}\n        />\n      </div>\n\n      {error && (\n        <div style={{ \n          color: 'red', \n          marginBottom: '20px', \n          padding: '10px', \n          backgroundColor: '#fff3f3',\n          borderRadius: '4px'\n        }}>\n          {error}\n        </div>\n      )}\n\n      <button \n        onClick={analyzeText}\n        disabled={isLoading}\n        style={{ \n          width: '100%', \n          padding: '12px', \n          backgroundColor: isLoading ? '#cccccc' : '#0066cc', \n          color: 'white', \n          border: 'none',\n          borderRadius: '4px',\n          cursor: isLoading ? 'not-allowed' : 'pointer',\n          marginBottom: '20px'\n        }}\n      >\n        {isLoading ? 'Analyzing...' : 'Analyze Text'}\n      </button>\n\n      <div style={{ display: 'flex', gap: '20px' }}>\n        <div style={{ flex: 1 }}>\n          <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\n            Extracted Information:\n          </label>\n          <textarea\n            value={result}\n            readOnly\n            placeholder=\"Extracted information will appear here...\"\n            style={{ \n              width: '100%', \n              height: '200px', \n              padding: '10px',\n              backgroundColor: '#f5f5f5',\n              borderRadius: '4px',\n              border: '1px solid #ccc'\n            }}\n          />\n        </div>\n\n        <div style={{ flex: 1 }}>\n          <label style={{ display: 'block', marginBottom: '10px', fontWeight: 'bold' }}>\n            Product Table:\n          </label>\n          <textarea\n            value={tableResult}\n            readOnly\n            placeholder=\"Product table will appear here...\"\n            style={{ \n              width: '100%', \n              height: '200px', \n              padding: '10px',\n              backgroundColor: '#f5f5f5',\n              borderRadius: '4px',\n              border: '1px solid #ccc',\n              fontFamily: 'monospace'\n            }}\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TextAnalyzer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}