{"ast":null,"code":"var _jsxFileName = \"/Users/cheonsu/desoutter/product ID finding app/src/components/TextAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Container, Textarea, VStack, Text, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextAnalyzer() {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const toast = useToast();\n  const testLLM = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/analyze', {\n        text: 'This is a test message. Please confirm if you can process this text.'\n      });\n      setResult(response.data.result);\n      toast({\n        title: 'Success',\n        description: 'LLM connection is working!',\n        status: 'success',\n        duration: 3000,\n        isClosable: true\n      });\n    } catch (error) {\n      console.error('Error details:', error);\n      toast({\n        title: 'Connection Error',\n        description: `Error: ${error.message}`,\n        status: 'error',\n        duration: 5000,\n        isClosable: true\n      });\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.md\",\n    py: 10,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"green\",\n        onClick: testLLM,\n        isLoading: isLoading,\n        width: \"full\",\n        children: \"Test LLM Connection\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Textarea, {\n        placeholder: \"Enter your text here...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        size: \"lg\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: analyzeText,\n        isLoading: isLoading,\n        width: \"full\",\n        children: \"Analyze Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        borderWidth: 1,\n        borderRadius: \"md\",\n        width: \"full\",\n        backgroundColor: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          whiteSpace: \"pre-wrap\",\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n_s(TextAnalyzer, \"UgziS+O2qFpGLtgPCord9iMnw4s=\", false, function () {\n  return [useToast];\n});\n_c = TextAnalyzer;\nexport default TextAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"TextAnalyzer\");","map":{"version":3,"names":["React","useState","Box","Button","Container","Textarea","VStack","Text","useToast","axios","jsxDEV","_jsxDEV","TextAnalyzer","_s","input","setInput","result","setResult","isLoading","setIsLoading","toast","testLLM","response","post","text","data","title","description","status","duration","isClosable","error","console","message","maxW","py","children","spacing","colorScheme","onClick","width","fileName","_jsxFileName","lineNumber","columnNumber","placeholder","value","onChange","e","target","size","height","analyzeText","p","borderWidth","borderRadius","backgroundColor","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/cheonsu/desoutter/product ID finding app/src/components/TextAnalyzer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  Textarea,\n  VStack,\n  Text,\n  useToast,\n} from '@chakra-ui/react';\nimport axios from 'axios';\n\nfunction TextAnalyzer() {\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const toast = useToast();\n\n  const testLLM = async () => {\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/analyze', {\n        text: 'This is a test message. Please confirm if you can process this text.'\n      });\n      setResult(response.data.result);\n      toast({\n        title: 'Success',\n        description: 'LLM connection is working!',\n        status: 'success',\n        duration: 3000,\n        isClosable: true,\n      });\n    } catch (error) {\n      console.error('Error details:', error);\n      toast({\n        title: 'Connection Error',\n        description: `Error: ${error.message}`,\n        status: 'error',\n        duration: 5000,\n        isClosable: true,\n      });\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Container maxW=\"container.md\" py={10}>\n      <VStack spacing={6}>\n        <Button\n          colorScheme=\"green\"\n          onClick={testLLM}\n          isLoading={isLoading}\n          width=\"full\"\n        >\n          Test LLM Connection\n        </Button>\n        <Textarea\n          placeholder=\"Enter your text here...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          size=\"lg\"\n          height=\"200px\"\n        />\n        <Button\n          colorScheme=\"blue\"\n          onClick={analyzeText}\n          isLoading={isLoading}\n          width=\"full\"\n        >\n          Analyze Text\n        </Button>\n        {result && (\n          <Box\n            p={4}\n            borderWidth={1}\n            borderRadius=\"md\"\n            width=\"full\"\n            backgroundColor=\"gray.50\"\n          >\n            <Text whiteSpace=\"pre-wrap\">{result}</Text>\n          </Box>\n        )}\n      </VStack>\n    </Container>\n  );\n}\n\nexport default TextAnalyzer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}