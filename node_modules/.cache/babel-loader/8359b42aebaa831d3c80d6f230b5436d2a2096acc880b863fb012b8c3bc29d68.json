{"ast":null,"code":"var _jsxFileName = \"/Users/cheonsu/desoutter/product ID finding app/src/components/TextAnalyzer.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Box, Button, Container, Textarea, VStack, Text, useToast } from '@chakra-ui/react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction TextAnalyzer() {\n  _s();\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const toast = useToast();\n  const analyzeText = async () => {\n    if (!input.trim()) {\n      toast({\n        title: 'Error',\n        description: 'Please enter some text to analyze',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n      return;\n    }\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/analyze', {\n        text: input\n      });\n      setResult(response.data.result);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to analyze text',\n        status: 'error',\n        duration: 3000,\n        isClosable: true\n      });\n    }\n    setIsLoading(false);\n  };\n  return /*#__PURE__*/_jsxDEV(Container, {\n    maxW: \"container.md\",\n    py: 10,\n    children: /*#__PURE__*/_jsxDEV(VStack, {\n      spacing: 6,\n      children: [/*#__PURE__*/_jsxDEV(Textarea, {\n        placeholder: \"Enter your text here...\",\n        value: input,\n        onChange: e => setInput(e.target.value),\n        size: \"lg\",\n        height: \"200px\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        colorScheme: \"blue\",\n        onClick: analyzeText,\n        isLoading: isLoading,\n        width: \"full\",\n        children: \"Analyze Text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), result && /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        borderWidth: 1,\n        borderRadius: \"md\",\n        width: \"full\",\n        backgroundColor: \"gray.50\",\n        children: /*#__PURE__*/_jsxDEV(Text, {\n          whiteSpace: \"pre-wrap\",\n          children: result\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n}\n_s(TextAnalyzer, \"UgziS+O2qFpGLtgPCord9iMnw4s=\", false, function () {\n  return [useToast];\n});\n_c = TextAnalyzer;\nexport default TextAnalyzer;\nvar _c;\n$RefreshReg$(_c, \"TextAnalyzer\");","map":{"version":3,"names":["React","useState","Box","Button","Container","Textarea","VStack","Text","useToast","axios","jsxDEV","_jsxDEV","TextAnalyzer","_s","input","setInput","result","setResult","isLoading","setIsLoading","toast","analyzeText","trim","title","description","status","duration","isClosable","response","post","text","data","error","maxW","py","children","spacing","placeholder","value","onChange","e","target","size","height","fileName","_jsxFileName","lineNumber","columnNumber","colorScheme","onClick","width","p","borderWidth","borderRadius","backgroundColor","whiteSpace","_c","$RefreshReg$"],"sources":["/Users/cheonsu/desoutter/product ID finding app/src/components/TextAnalyzer.js"],"sourcesContent":["import React, { useState } from 'react';\nimport {\n  Box,\n  Button,\n  Container,\n  Textarea,\n  VStack,\n  Text,\n  useToast,\n} from '@chakra-ui/react';\nimport axios from 'axios';\n\nfunction TextAnalyzer() {\n  const [input, setInput] = useState('');\n  const [result, setResult] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const toast = useToast();\n\n  const analyzeText = async () => {\n    if (!input.trim()) {\n      toast({\n        title: 'Error',\n        description: 'Please enter some text to analyze',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n      return;\n    }\n\n    setIsLoading(true);\n    try {\n      const response = await axios.post('/api/analyze', { text: input });\n      setResult(response.data.result);\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to analyze text',\n        status: 'error',\n        duration: 3000,\n        isClosable: true,\n      });\n    }\n    setIsLoading(false);\n  };\n\n  return (\n    <Container maxW=\"container.md\" py={10}>\n      <VStack spacing={6}>\n        <Textarea\n          placeholder=\"Enter your text here...\"\n          value={input}\n          onChange={(e) => setInput(e.target.value)}\n          size=\"lg\"\n          height=\"200px\"\n        />\n        <Button\n          colorScheme=\"blue\"\n          onClick={analyzeText}\n          isLoading={isLoading}\n          width=\"full\"\n        >\n          Analyze Text\n        </Button>\n        {result && (\n          <Box\n            p={4}\n            borderWidth={1}\n            borderRadius=\"md\"\n            width=\"full\"\n            backgroundColor=\"gray.50\"\n          >\n            <Text whiteSpace=\"pre-wrap\">{result}</Text>\n          </Box>\n        )}\n      </VStack>\n    </Container>\n  );\n}\n\nexport default TextAnalyzer;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}